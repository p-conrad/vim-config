filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" Plugins
Plugin 'VundleVim/Vundle.vim'
Plugin 'vim-syntastic/syntastic'
Plugin 'mattn/emmet-vim'
Plugin 'tpope/vim-surround'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-session'
Plugin 'tmhedberg/matchit'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'Valloric/YouCompleteMe'
Plugin 'jiangmiao/auto-pairs'
Plugin 'itchyny/vim-haskell-indent'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'tacahiroy/ctrlp-funky'
Plugin 'sjl/gundo.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'vim-scripts/EasyHtml.vim'
Plugin 'danro/rename.vim'

" Color schemes
Plugin 'altercation/vim-colors-solarized'
Plugin 'chriskempson/tomorrow-theme', {'rtp': 'vim/'}
Plugin 'rakr/vim-one'
Plugin 'crusoexia/vim-monokai'
call vundle#end()

colorscheme one
set background=dark
if has('gui_running')
	set guioptions-=r
	set guioptions-=L
	set guioptions-=T
	if has('gui_macvim')
		set guifont=Input:h12
	else
		set guifont=Inconsolata\ 12
	endif
endif

filetype plugin indent on
syntax on
set autoindent
set nocompatible
set ruler
set scrolloff=2
set showmode
set showcmd
set hidden
set wildmenu
set wildmode=longest:list,full
set cursorline
set ttyfast
set backspace=indent,eol,start
set laststatus=2
set statusline=%.25F[%{strlen(&fenc)?&fenc:'none'},%{&ff}]%h%m%r%y%{fugitive#statusline()}%{SyntasticStatuslineFlag()}%*%=%c,%l/%L\ %P
set relativenumber
set linespace=2

" Always switch to the directory of the current file
set autochdir
" autocmd BufEnter * silent! lcd %:p:h

let mapleader = ","

" Searching
nnoremap / /\v
vnoremap / /\v
set ignorecase
set smartcase
set gdefault
set incsearch
set showmatch
set hlsearch
nnoremap <leader><space> :noh<cr>
" Search for highlighted text (will not work with backspaces)
vnoremap // y/\V<C-R>"<CR>
" Search for copied text
nnoremap // /<C-R>0<cr>

" Press the leader key twice to use the ',' command
nnoremap <leader><leader> ,

" Text formatting
set wrap
set textwidth=120
set colorcolumn=120
set formatoptions=qnmM1jc
" r: comment after enter, q: allow formatting with gq, n: recognize lists
" m: break multi-byte characters, M: no space after multi-byte char when joining lines
" 1: don't break afer one-letter word, j: remove comment leader when joining lines
" tc: format text and comments
" -> :help fo-table
set linebreak
set breakat+=>
let &showbreak='>> '
set breakindent
set breakindentopt=shift:-3

" Tab length
set tabstop=4 shiftwidth=4
autocmd FileType html,xhtml,php,eruby setlocal tabstop=2 shiftwidth=2
autocmd FileType haskell setlocal expandtab

" Show invisibles
set listchars=tab:»\ ,eol:¬,nbsp:•
nnoremap <leader>l :set list!<cr>

" Line break at cursor
nnoremap <return> i<cr><esc>

" Fold tag
nnoremap <leader>ft Vatzf

" Indentation
nnoremap <leader>it vit=
nnoremap <leader>iT vat=
nnoremap <tab> ==
nnoremap <C-tab> gg=G

" Open/Close folds
nnoremap <space> za

" Splits
set splitbelow
set splitright
set winminheight=0
nnoremap <leader>wv <C-w>v<C-w>l
nnoremap <leader>ws <C-w>s<C-w>j
nnoremap <leader>wr <C-w>r
nnoremap <leader>_ <C-w>_
nnoremap <leader>\| <C-w>\|
nnoremap <leader>= <C-w>=

" Navigating splits
nnoremap <C-s> <C-w>h
nnoremap <C-t> <C-w>l
nnoremap <C-n> <C-w>j
nnoremap <C-r> <C-w>k
nnoremap <leader>s <C-w>h
nnoremap <leader>t <C-w>l
nnoremap <leader>n <C-w>j
nnoremap <leader>r <C-w>k
nnoremap <leader>N <C-w>j<C-w>_
nnoremap <leader>R <C-w>k<C-w>_

" Remap 'redo' since we are using <C-r> for navigation now
nnoremap <C-j> <C-r>

" Resizing splits
nnoremap <silent> <A-Left> :vertical resize -5<cr>
nnoremap <silent> <A-Right> :vertical resize +5<cr>
nnoremap <silent> <A-Up> :resize +5<cr>
nnoremap <silent> <A-Down> :resize -5<cr>
nnoremap <silent> <leader>2 <C-w>h:exec "vertical resize " . (&columns * 1/2)<cr>
nnoremap <silent> <leader>3 <C-w>h:exec "vertical resize " . (&columns * 3/5)<cr>
nnoremap <silent> <leader>4 <C-w>h:exec "vertical resize " . (&columns * 7/10)<cr>

" Exit to normal mode
inoremap … <esc>

" Open ex mode
nnoremap <leader>x :

" Open .vimrc
nnoremap <leader>ev :e $MYVIMRC<cr>
nnoremap <leader>eV :vsp $MYVIMRC<cr>

" Disable help key
inoremap <f1> <esc>
nnoremap <f1> <esc>
vnoremap <f1> <esc>

" Paste stuff directly from insert mode
inoremap <leader>p <esc>pa
inoremap <leader>P <esc>"0pa
inoremap <leader>sp <esc>"*pa

" Jump to the beginning/end of a line
nnoremap B ^
nnoremap E $

" highlight last inserted text
nnoremap gV `[v`]

" Split a tag into multiple lines
inoremap <S-cr> <cr><esc>O

" tee hack to save a file even when it's opened read-only (e.g. forgetting sudo)
cmap w!! w !sudo tee >/dev/null %

" Ctrl-P setup
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_root_markers = ['htdocs']
let g:ctrlp_extensions = ['funky']
let g:ctrlp_funky_matchtype = 'path'
let g:ctrlp_funky_syntax_highlight = 1

nnoremap <C-b> :CtrlPBuffer<cr>
nnoremap <leader>pm :CtrlPMixed<cr>
nnoremap <leader>pf :CtrlPFunky<cr>
nnoremap <Leader>pF :execute 'CtrlPFunky ' . expand('<cword>')<cr>

" toggle undo
nnoremap <leader>u :GundoToggle<cr>

" Git commands
nnoremap <leader>gs :Gstatus<cr>
nnoremap <leader>gc :Gcommit<cr>
nnoremap <leader>gp :Gpush<cr>
nnoremap <leader>gl :Glog<cr>
nnoremap <leader>gb :Gblame<cr>
nnoremap <leader>gd :Gdiff<cr>

" Syntastic
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_html_checkers = ['htmlhint', 'tidy']
let g:syntastic_html_htmlhint_args = '--config ~/.vim/rc/htmlhintrc'
let g:syntastic_html_tidy_ignore_errors = ['proprietary attribute']
autocmd BufNewFile,BufRead htmlhintrc set filetype=json
nnoremap <leader>sc :SyntasticCheck<cr>
nnoremap <leader>sr :SyntasticReset<cr>
nnoremap <leader>st :SyntasticToggleMode<cr>

" Map adjustments for the Neo 2 keyboard layout
no s h
no h s
no n j
no j n
no r k
no k r
no t l
no l t

no S H
no H S
no N J
no J N
no R K
no K R
no T L
no L T

" Emmet customization
autocmd FileType html,xhtml,css,php,eruby source ~/.vim/rc/emmet_custom

"Sessions
let g:session_autosave = 'no'
let g:session_command_aliases = 1
