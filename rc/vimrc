filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" Plugins
Plugin 'VundleVim/Vundle.vim'
"Plugin 'scrooloose/syntastic'
Plugin 'mattn/emmet-vim'
Plugin 'tpope/vim-surround'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-session'
Plugin 'tmhedberg/matchit'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'StanAngeloff/php.vim'
Plugin 'Valloric/YouCompleteMe'
Plugin 'jiangmiao/auto-pairs'
Plugin 'itchyny/vim-haskell-indent'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'tacahiroy/ctrlp-funky'

" Color schemes
Plugin 'altercation/vim-colors-solarized'
Plugin 'chriskempson/tomorrow-theme', {'rtp': 'vim/'}
Plugin 'chriskempson/base16-vim'
call vundle#end()

colorscheme solarized
if has('gui_running')
    set background=light
	set guioptions-=r
	set guioptions-=L
	set guioptions-=T
	if has('gui_macvim')
		set guifont=Input:h12
	else
		set guifont=Inconsolata\ 12
	endif
else
    set background=dark
endif

filetype plugin indent on
syntax on
set autoindent
set nocompatible
set ruler
set scrolloff=4
set showmode
set showcmd
set hidden
set wildmenu
set wildmode=longest:list,full
set cursorline
set ttyfast
set backspace=indent,eol,start
set laststatus=2
set statusline=%t[%{strlen(&fenc)?&fenc:'none'},%{&ff}]%h%m%r%y%=%c,%l/%L\ %P
set relativenumber
set linespace=2

let mapleader = ","

" Searching
nnoremap / /\v
vnoremap / /\v
set ignorecase
set smartcase
set gdefault
set incsearch
set showmatch
set hlsearch
nnoremap <leader><space> :noh<cr>

" Text formatting
set wrap
set textwidth=120
set colorcolumn=120
set formatoptions=qnmM1jtc
" r: comment after enter, q: allow formatting with gq, n: recognize lists
" m: break multi-byte characters, M: no space after multi-byte char when joining lines
" 1: don't break afer one-letter word, j: remove comment leader when joining lines
" tc: format text and comments
" -> :help fo-table

" Tab length
set tabstop=4 shiftwidth=4
autocmd FileType html,xhtml,php,eruby setlocal tabstop=2 shiftwidth=2
autocmd FileType haskell setlocal expandtab

" Show invisibles
set listchars=tab:»\ ,eol:¬,nbsp:•
nnoremap <leader>l :set list!<cr>

" Line break at cursor
nnoremap <return> i<cr><esc>

" Fold tag
nnoremap <leader>ft Vatzf

" Splits
set splitbelow
set splitright
set winminheight=0
nnoremap <leader>wv <C-w>v<C-w>l
nnoremap <leader>ws <C-w>s<C-w>j
nnoremap <leader>wr <C-w>r
nnoremap <leader>s <C-w>h
nnoremap <leader>t <C-w>l
nnoremap <leader>n <C-w>j
nnoremap <leader>r <C-w>k
nnoremap <leader>_ <C-w>_
nnoremap <leader>\| <C-w>\|
nnoremap <leader>= <C-w>=
nnoremap <leader>N <C-w>j<C-w>_
nnoremap <leader>R <C-w>k<C-w>_

" Exit to normal mode
inoremap jj <esc>
inoremap … <esc>
inoremap <leader><leader> <esc>

" Open .vimrc
nnoremap <leader>ev :e $MYVIMRC<cr>
nnoremap <leader>eV <C-w><C-v><C-l>:e $MYVIMRC<cr>

" Disable help key
inoremap <f1> <esc>
nnoremap <f1> <esc>
vnoremap <f1> <esc>

" Paste stuff directly from insert mode
inoremap <leader>p <esc>p
inoremap <leader>sp <esc>"*p

" 'Stamp' the word below the cursor with a previously yanked text
nnoremap S daw"0p

" Ctrl-P setup
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_root_markers = ['htdocs']
let g:ctrlp_extensions = ['funky']
let g:ctrlp_funky_matchtype = 'path'
let g:ctrlp_funky_syntax_highlight = 1

nnoremap <leader>pp :CtrlP<cr>
nnoremap <leader>pb :CtrlPBuffer<cr>
nnoremap <leader>pm :CtrlPMixed<cr>
nnoremap <leader>pf :CtrlPFunky<cr>
nnoremap <Leader>pF :execute 'CtrlPFunky ' . expand('<cword>')<cr>

" Anpassungen für Neo
no s h
no h s
no n j
no j n
no r k
no k r
no t l
no l t

no S H
no H S
no N J
no J N
no R K
no K R
no T L
no L T

" Syntastic
"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*

"let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list = 1
"let g:syntastic_check_on_open = 1
"let g:syntastic_check_on_wq = 0

" Emmet customization
autocmd FileType html,xhtml,css,php,eruby source ~/.vim/rc/emmet_custom

"Sessions
let g:session_autosave = 'no'
let g:session_command_aliases = 1
